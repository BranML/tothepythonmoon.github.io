<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>No_0005_美国进入紧急状态</title>
    <url>/2020/05/02/No_0005_%E7%BE%8E%E5%9B%BD%E8%BF%9B%E5%85%A5%E7%B4%A7%E6%80%A5%E7%8A%B6%E6%80%81/</url>
    <content><![CDATA[<h1 id="美国进入紧急状态"><a href="#美国进入紧急状态" class="headerlink" title="美国进入紧急状态"></a>美国进入紧急状态</h1><a id="more"></a>

<p><img src="https://ichef.bbci.co.uk/news/660/cpsprodpb/FE8D/production/_111256156_a90f3aaa-c94e-49b5-83cc-ccd2b1861b13.jpg" alt=""></p>
<p><strong>美国总统特朗普13日宣布，鉴于新型冠状病毒疫情，美国进入国家紧急状态。目前，美国有超过1700例确诊病例，40例死亡。</strong></p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>新冠肺炎在美国愈发流行和严重</p>
<h2 id="举措"><a href="#举措" class="headerlink" title="举措"></a>举措</h2><p>特朗普在白宫举行的发布会上说：“我正在采取的行动将开放最多达500亿美元的资金渠道，这是非常、非常重要的巨额资金，帮助州、领地和地方，共同抗击这一疾病。”</p>
<p>特朗普还敦促各州立即建立紧急行动中心。他还表示，预计美国将在一周内提供140万套新型冠状病毒检测试剂盒，下个月将总共提供500万套。</p>
<h2 id="进入紧急状态有什么用"><a href="#进入紧急状态有什么用" class="headerlink" title="进入紧急状态有什么用"></a>进入紧急状态有什么用</h2><p>特朗普根据《国家紧急状态法案》宣布紧急状态，该法案允许美国卫生与公众服务部忽视一些与医疗保险</p>
<p>医疗补助计划和国家儿童健康保险计划有关的指导方针，以应对冠状病毒。</p>
<h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>有时候并不需要你去创造历史，你见证历史就足够了，只要你活的够久，什么事都会见过</p>
<p>印象中 中国抗击疫情的时候 其他国家都不以为然 有的甚至冷嘲热讽 污蔑中国制造了病毒之类</p>
<p>事情发展到现在 各个国家也都自顾不暇 而我宅家两个多月 经历了每天看确诊几万人 到现在每天确诊几十人</p>
<p>感觉自己过的好不好 不需要别人说三道四 反正我在中国 即使遇到这么大的困难</p>
<p>依然没对我造成非常大的伤害 我的生活依然井然有序 我觉得我们国家 政府做的不错</p>
<h2 id="各种声音"><a href="#各种声音" class="headerlink" title="各种声音"></a>各种声音</h2><p>新冠肺炎的起源还没有查清楚，但是反华反共的很多媒体依然把这个疾病叫做“武汉肺炎”</p>
<p>虽然世界卫生组织已经将它命名为COVID-19</p>
<p>疫情初期，爆发自武汉，导致大家都将这类肺炎叫做“武汉肺炎”，但随着事件发展，世界卫生组织给它命名</p>
<p>国外疫情的发展，无武汉旅行史，无接触史的人也患病，0号病人究竟是谁等一系列问题，导致疫情起源扑朔迷离</p>
<p>但一些人，一些媒体依然将这个疾病称作“武汉肺炎”，总是感觉 他们别有用心</p>
]]></content>
  </entry>
  <entry>
    <title>2020.03.12美股第二次熔断</title>
    <url>/2020/05/02/2020.03.12%E7%BE%8E%E8%82%A1%E7%AC%AC%E4%BA%8C%E6%AC%A1%E7%86%94%E6%96%AD/</url>
    <content><![CDATA[<h1 id="美股第二次熔断"><a href="#美股第二次熔断" class="headerlink" title="美股第二次熔断"></a>美股第二次熔断</h1><p><img src="https://n.sinaimg.cn/finance/transform/116/w550h366/20200312/5902-iquxruh5254970.jpg" alt=""></p>
<a id="more"></a>

<h2 id="熔断时间"><a href="#熔断时间" class="headerlink" title="熔断时间"></a>熔断时间</h2><p>北京时间2020年3月12日晚星期四 美国时间 美东时间2020年3月12日星期四上午09:36</p>
<h2 id="跌幅"><a href="#跌幅" class="headerlink" title="跌幅"></a>跌幅</h2><p><del>虽然并看不懂</del>  </p>
<blockquote>
<p>道指跌1，696.31点，或7.20%，报21856.91点；纳指跌558.80点，或7.03%，报7393.25点；标普500指数跌192.33点，或7.02%，报2549.05点</p>
</blockquote>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>受疫情影响 美国颁布了旅行禁令 禁止除英国和爱尔兰以外的国家和地区的人前往美国 </p>
<p><img src="https://n.sinaimg.cn/finance/transform/478/w294h184/20200312/3000-iquxruh5319004.jpg" alt=""></p>
<p>通过病毒检测的美国公民可以回国</p>
<p><img src="https://n.sinaimg.cn/finance/transform/62/w550h312/20200312/2a42-iquxruh5300411.jpg" alt=""></p>
<h2 id="其他影响"><a href="#其他影响" class="headerlink" title="其他影响"></a>其他影响</h2><blockquote>
<p>原油期货价格继续暴跌。黄金价格接连跌破1600、1590美元两大关口</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>No_0006_windows下的下载器-XDown</title>
    <url>/2020/05/02/No_0006_windows%E4%B8%8B%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%99%A8-XDown/</url>
    <content><![CDATA[<h1 id="Windows下的下载器-XDown"><a href="#Windows下的下载器-XDown" class="headerlink" title="Windows下的下载器-XDown"></a>Windows下的下载器-XDown</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>是一款下载工具，但是有可以媲美idm下载速度，而且支持磁力链接等</p>
<p>官网简介为 <strong>免费无广告的idm / torrent 合成体</strong></p>
<a id="more"></a>

<p><strong>详细功能如下</strong></p>
<ul>
<li>支持浏览器(Chrome/FireFox)接管下载</li>
<li>支持youtube下载视频,音频</li>
<li>支持torrent下载文件与做种</li>
<li>支持断线重连</li>
<li>支持标准FTP/HTTP/HTTPS/HTTP2协议下载</li>
<li>支持http header自定义字段</li>
<li>支持手动设置并发数(最大128)</li>
<li>支持异步自定义dns服务器,支持非标准dns端口ipv4+ipv6</li>
<li>支持内置自定义hosts,一个域名可对应多个ip</li>
<li>支持多IP轮询节点下载</li>
<li>支持BITtorrent 内置tracker list设置</li>
<li>支持tls1.0/1.1/1.2/1.3-sni</li>
<li>支持磁力链接</li>
<li>支持DHT ipv4+ipv6</li>
<li>支持全局限速</li>
<li>支持自定义全局代理设置</li>
<li>支持tracker请求自定义agent</li>
<li>支持torrent自定义用户标识,ID前缀</li>
</ul>
<h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><strong>XDown主界面</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0006_windows%E4%B8%8B%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%99%A8-XDown/Xdown%E7%95%8C%E9%9D%A2.png?raw=true" alt=""></p>
<p><strong>XDown任务界面</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0006_windows%E4%B8%8B%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%99%A8-XDown/XDown%E4%BB%BB%E5%8A%A1%E7%95%8C%E9%9D%A2.png?raw=true" alt=""></p>
<p><strong>XDown设置界面</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0006_windows%E4%B8%8B%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%99%A8-XDown/XDown%E8%AE%BE%E7%BD%AE%E7%95%8C%E9%9D%A2.png?raw=true" alt=""></p>
<p><strong>XDown设置详细界面</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0006_windows%E4%B8%8B%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%99%A8-XDown/XDown%E8%AE%BE%E7%BD%AE%E8%AF%A6%E7%BB%86%E7%95%8C%E9%9D%A2.png?raw=true" alt=""></p>
<h2 id="特色功能"><a href="#特色功能" class="headerlink" title="特色功能"></a>特色功能</h2><p><strong>通过简单配置可以实现以下功能</strong></p>
<ul>
<li><p>傻瓜式下载YouTube视频</p>
</li>
<li><p>客户端伪装</p>
</li>
<li><p>突破百度云限制 高速下载文件 且没有大小限制</p>
</li>
<li><p>…</p>
</li>
</ul>
<p><strong>更多功能介绍请移步官网</strong></p>
<p><a href="https://xdown.org/" target="_blank" rel="noopener">XDown官网</a></p>
<h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p><a href="https://dl.xdown.org/xdown-1.0.2.9.zip" target="_blank" rel="noopener">官网下载页</a></p>
<p><a href="https://dl.xdown.org/xdown-1.0.2.9.zip" target="_blank" rel="noopener">国际下载地址</a></p>
<p><a href="https://cn-dl.xdown.org:2053/xdown-1.0.2.9.zip" target="_blank" rel="noopener">国内下载地址</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>有时一款下载器并不能满足你所需要的全部要求，这款下载器有较全的功能，非常值得一试</p>
]]></content>
  </entry>
  <entry>
    <title>No_0007_git命令学习（一）-clone和push</title>
    <url>/2020/05/02/No_0007_git%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89-clone%E5%92%8Cpush/</url>
    <content><![CDATA[<h1 id="No-0007-git命令学习（一）-clone和push"><a href="#No-0007-git命令学习（一）-clone和push" class="headerlink" title="No_0007_git命令学习（一）-clone和push"></a>No_0007_git命令学习（一）-clone和push</h1><h2 id="从服务器将项目下载到本地"><a href="#从服务器将项目下载到本地" class="headerlink" title="从服务器将项目下载到本地"></a>从服务器将项目下载到本地</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chromium/chromium.git</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><strong>代码解释</strong></p>
<p>git 代表git命令 clone 代表克隆 <a href="https://github.com/xxxxxxxx/xxxxxxx" target="_blank" rel="noopener">https://github.com/xxxxxxxx/xxxxxxx</a> 代表你所要从服务器端下载到本地的项目地址（项目地址获取方式如下图 以chromium为例）</p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0007_git%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89-clone%E5%92%8Cpush/git_clone%E6%8C%89%E9%92%AE.jpg" alt=""></p>
<h2 id="将本地项目上传到github"><a href="#将本地项目上传到github" class="headerlink" title="将本地项目上传到github"></a>将本地项目上传到github</h2><p>1.进入需要上传的项目目录</p>
<p>2.依次使用如下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;message&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<p><strong>中途会要求你输入github用户名和密码</strong></p>
]]></content>
  </entry>
  <entry>
    <title>No_0012_利用AI给黑白图片上色</title>
    <url>/2020/05/02/No_0012_%E5%88%A9%E7%94%A8AI%E7%BB%99%E9%BB%91%E7%99%BD%E5%9B%BE%E7%89%87%E4%B8%8A%E8%89%B2/</url>
    <content><![CDATA[<h1 id="利用AI给黑白图片上色–DeOldify"><a href="#利用AI给黑白图片上色–DeOldify" class="headerlink" title="利用AI给黑白图片上色–DeOldify"></a>利用AI给黑白图片上色–DeOldify</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这是一个github上的开源项目 <a href="https://github.com/jantic/DeOldify" target="_blank" rel="noopener">传送门</a></p>
<p>利用深度学习给黑白照片上色</p>
<a id="more"></a>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于我没有Nvidia的显卡 只能使用Google Colab提供的python笔记本来运行项目</p>
<ol>
<li><p>打开DeOldify的GitHub项目地址</p>
</li>
<li><p>找到Image (artistic) open in colab 按钮</p>
</li>
<li><p>点击进入DeOldify在colab项目页面</p>
</li>
<li><p>依次点击运行按钮 如下</p>
</li>
</ol>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0012_%E5%88%A9%E7%94%A8AI%E7%BB%99%E9%BB%91%E7%99%BD%E5%9B%BE%E7%89%87%E4%B8%8A%E8%89%B2/colab%E8%BF%90%E8%A1%8C%E6%8C%89%E9%92%AE.png?raw=true" alt="colab运行按钮"></p>
<ol start="5">
<li>直到如下图 按照说明填写黑白照片网址 上色质量参数 水印按钮</li>
</ol>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0012_%E5%88%A9%E7%94%A8AI%E7%BB%99%E9%BB%91%E7%99%BD%E5%9B%BE%E7%89%87%E4%B8%8A%E8%89%B2/%E4%B8%8A%E8%89%B2%E8%AE%BE%E7%BD%AE.png?raw=true" alt="上色设置"></p>
<ol start="6">
<li>设置好上述参数后即可点击运行按钮 获得一张由机器学习上色的彩色照片</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>No_0014_python web应用flask web</title>
    <url>/2020/05/02/No_0014_python%20web%E5%BA%94%E7%94%A8flask%20web/</url>
    <content><![CDATA[<h1 id="python-web应用flask-web-学习（一）"><a href="#python-web应用flask-web-学习（一）" class="headerlink" title="python web应用flask web 学习（一）"></a>python web应用flask web 学习（一）</h1><h2 id="系统-ubuntu-18-04-4LTS"><a href="#系统-ubuntu-18-04-4LTS" class="headerlink" title="系统 ubuntu 18.04.4LTS"></a>系统 ubuntu 18.04.4LTS</h2><h2 id="安装虚拟环境"><a href="#安装虚拟环境" class="headerlink" title="安装虚拟环境"></a>安装虚拟环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-virtualenv</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><strong>示例代码下载并进入对应章节代码 章节代码 1a 2a 3b等格式</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;miguelgrinberg&#x2F;flasky.git</span><br><span class="line">cd flasky</span><br><span class="line">git checkout 1a</span><br></pre></td></tr></table></figure>

<p><strong>创建虚拟环境</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">virtualenv venv</span><br></pre></td></tr></table></figure>
<p>会自动搭建好一个虚拟的venv的python环境 这个环境不会影响你系统本身的python环境</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0014_python%20web%E5%BA%94%E7%94%A8flask%20web/%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png?raw=true" alt="示例项目文件目录"></p>
<p><strong>虚拟环境目录结构</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0014_python%20web%E5%BA%94%E7%94%A8flask%20web/venv%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.png?raw=true" alt="venv文件结构"></p>
<h2 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h2><p>venv 是虚拟环境名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source venv&#x2F;bin&#x2F;activate</span><br></pre></td></tr></table></figure>

<p>激活成功后终端内命令行最前面会有虚拟环境的名称 例如： (venv) $</p>
<p>回到全局终端 使用 <code>deactivate</code></p>
<h2 id="利用pip安装第三方python包"><a href="#利用pip安装第三方python包" class="headerlink" title="利用pip安装第三方python包"></a>利用pip安装第三方python包</h2><p>首先激活虚拟环境</p>
<p>然后在虚拟环境中利用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure>

<p>安装flask</p>
<p><strong>测试flask是否安装成功</strong> </p>
<p>进入python交互式编程模式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure>

<p>利用import倒入flask包 回车后不报错说明安装成功</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>并无难度 主要是要安装好开发环境 在编程前检验是否在虚拟环境内 不要搞混</p>
]]></content>
  </entry>
  <entry>
    <title>No_0015_python web应用flask web（二）</title>
    <url>/2020/05/02/No_0015_python%20web%E5%BA%94%E7%94%A8flask%20web%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="python-web应用flask-web学习笔记（二）"><a href="#python-web应用flask-web学习笔记（二）" class="headerlink" title="python web应用flask web学习笔记（二）"></a>python web应用flask web学习笔记（二）</h1><h2 id="编写第一个Flask-Web-程序"><a href="#编写第一个Flask-Web-程序" class="headerlink" title="编写第一个Flask Web 程序"></a>编写第一个Flask Web 程序</h2><a id="more"></a>

]]></content>
  </entry>
  <entry>
    <title>No_0016_下载afreeca直播的python脚本</title>
    <url>/2020/05/02/No_0016_%E4%B8%8B%E8%BD%BDafreeca%E7%9B%B4%E6%92%AD%E7%9A%84python%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="下载afreeca直播的python脚本"><a href="#下载afreeca直播的python脚本" class="headerlink" title="下载afreeca直播的python脚本"></a>下载afreeca直播的python脚本</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>afreecaTV是韩国的直播平台 它的直播流使用m3u8格式 利用ffmpeg下载直播流发现 里面的直播流xxx.ts文件只有四个是实时更新的</p>
<a id="more"></a>

<p>于是利用循环请求xxx.m3u8的方式获取直播流xxx.ts视频文件的地址并利用youtube-dl将其下载 其中用了现学现卖的多线程</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用youtube-dl下载</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xiazai</span><span class="params">(dz)</span>:</span></span><br><span class="line">    os.system(command=<span class="string">'youtube-dl '</span> + dz)</span><br><span class="line"><span class="comment">#模拟浏览器头文件</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3683.103 Safari/537.36"</span>&#125;</span><br><span class="line"><span class="comment">#不停访问直播地址，获取m3u8文件并得到ts的地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geturl</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#请求直播地址</span></span><br><span class="line">    kk=requests.get(<span class="string">'http://live-hls-local-cf.afreecatv.com/livestream-west-03/auth_playlist.m3u8?aid=.A32.7bbT56vyHM9fKZk.csJsI1RW2VeHNHmUaPUq_SjZ7KihDQOUHfdz0dNu6muEimIgZ8S1Hs16GZAo_m8eIbBp2NsxPQCbDns-Shp-6BJh0CC1JoP90BjiKUEeaJCekH6InFTu0R150RFiHhyv'</span>,headers=headers)</span><br><span class="line">    <span class="comment">#print(kk)</span></span><br><span class="line">    <span class="comment">#处理返回的页面代码</span></span><br><span class="line">    ooo = BeautifulSoup(kk.text, <span class="string">'lxml'</span>)</span><br><span class="line">    <span class="comment">#标签内的就是三个ts地址</span></span><br><span class="line">    p=ooo.select(<span class="string">"body &gt; p"</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#print(p)</span></span><br><span class="line">    <span class="comment">#进行地址切片，这里要注意直播流的序号一位数，两位数，三位数，四位数切片都不同，可以学习正则表达式改进</span></span><br><span class="line">    <span class="comment">#四位数切片【260：339】</span></span><br><span class="line">    f=p.string[<span class="number">260</span>:<span class="number">339</span>]</span><br><span class="line">    <span class="comment">#print(f)</span></span><br><span class="line">    <span class="comment">#拼接出真实的ts地址</span></span><br><span class="line">    down=<span class="string">"http://live-hls-local-cf.afreecatv.com/livestream-west-03/"</span>+f</span><br><span class="line">    print(down)</span><br><span class="line">    <span class="comment">#返回下载链接</span></span><br><span class="line">    <span class="keyword">return</span> down</span><br><span class="line"><span class="comment">#存放ts下载链接的</span></span><br><span class="line">a=[]</span><br><span class="line"><span class="comment">#不停地请求直播地址大概50可以请求到5个hls流文件</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">50000</span>):</span><br><span class="line">    <span class="comment">#获取直播ts地址</span></span><br><span class="line">    dizhi=geturl()</span><br><span class="line">    <span class="comment">#创建线程</span></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="comment">#如果下载地址没在存放下载的列表里就利用线程调用youtube-dl下载</span></span><br><span class="line">    <span class="keyword">if</span> dizhi <span class="keyword">not</span> <span class="keyword">in</span> a:</span><br><span class="line">        t = threading.Thread(target=xiazai, args=(dizhi,))</span><br><span class="line">        t.start()</span><br><span class="line">        threads.append(t)</span><br><span class="line">        <span class="comment">#把已经调用youtube-dl下载的ts放到a列表里面</span></span><br><span class="line">        a.append(dizhi)</span><br><span class="line"><span class="comment">#释放线程</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">    t.join()</span><br><span class="line"><span class="comment">#打印a下载列表</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>

<h2 id="使用这个脚本"><a href="#使用这个脚本" class="headerlink" title="使用这个脚本"></a>使用这个脚本</h2><p>你需要从网页获取到直播间的m3u8地址  并把它填写到请求直播地址的位置即可</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>下载的都是直播实时画面 每个视频文件5秒左右 需要后期合并成一个文件</p>
]]></content>
  </entry>
  <entry>
    <title>No_0018_Windows使用justmysocks</title>
    <url>/2020/05/02/No_0018_Windows%E4%BD%BF%E7%94%A8justmysocks/</url>
    <content><![CDATA[<h1 id="Windows使用Just-My-Socks"><a href="#Windows使用Just-My-Socks" class="headerlink" title="Windows使用Just My Socks"></a>Windows使用Just My Socks</h1><h2 id="下载客户端-（我已经将obfs插件打包）"><a href="#下载客户端-（我已经将obfs插件打包）" class="headerlink" title="下载客户端 （我已经将obfs插件打包）"></a>下载客户端 （我已经将obfs插件打包）</h2><p><a href="https://github.com/tothepythonmoon/2badaoblog/raw/master/blog/No_0018_Windows%E4%BD%BF%E7%94%A8justmysocks/shadowsocks%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%88%E5%90%ABobfs%E6%8F%92%E4%BB%B6%EF%BC%89.zip" target="_blank" rel="noopener"><strong>下载地址</strong></a></p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><a id="more"></a>

<h3 id="不使用obfs插件的"><a href="#不使用obfs插件的" class="headerlink" title="不使用obfs插件的"></a>不使用obfs插件的</h3><ul>
<li><p>利用ss链接导入</p>
</li>
<li><p>利用二维码导入</p>
</li>
</ul>
<h3 id="使用obfs插件的"><a href="#使用obfs插件的" class="headerlink" title="使用obfs插件的"></a>使用obfs插件的</h3><ul>
<li>手动输入服务器地址 密码端口等 插件位置如下图所示填写</li>
</ul>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0018_Windows%E4%BD%BF%E7%94%A8justmysocks/Snipaste_2020-04-11_11-30-28.png?raw=true" alt="**ss设置**"></p>
]]></content>
  </entry>
  <entry>
    <title>No_0019_justmysocks线路选择</title>
    <url>/2020/05/02/No_0019_justmysocks%E7%BA%BF%E8%B7%AF%E9%80%89%E6%8B%A9/</url>
    <content><![CDATA[<h1 id="Just-My-Socks线路选择"><a href="#Just-My-Socks线路选择" class="headerlink" title="Just My Socks线路选择"></a>Just My Socks线路选择</h1><h2 id="官方文档建议"><a href="#官方文档建议" class="headerlink" title="官方文档建议"></a>官方文档建议</h2><p>洛杉矶</p>
<p>我们为您提供5个IP，它们的路由略有不同：</p>
<a id="more"></a>

<p>cXs1，cXs2和cXs5通过具有额外的中国联通和中国移动直接连接功能的CN2 GT网络进行路由。我们使用多个CN2 GT数据中心，因此不会平等地路由所有3个服务器以确保最大的弹性。</p>
<p>服务器cXs3通过中国电信提供的CN2 GIA网络路由（仅中国电信路由）。 </p>
<p>服务器cXs4通过高级中国移动混合路由（在返回路径上具有CN2 GIA）（仅中国移动路由）。 </p>
<p>此外，我们在服务器cXs3和cXs4上启用了obfs插件（obfs = tls）</p>
<p>根据您的提供商（CT，CU，CM）的不同，使用不同的服务器可能会看到不同的连接速度，因此我们建议尝试一下每台服务器，看看哪种服务器最适合您。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><p>1号 2号 5号 线路适用于移动和联通</p>
</li>
<li><p>3号 线路适用于电信 （使用obfs插件）</p>
</li>
<li><p>4号 线路适用于移动 （使用obfs插件）</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>No_0017_毕业论文</title>
    <url>/2020/05/02/No_0017_%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/</url>
    <content><![CDATA[<h1 id="本科毕业论文"><a href="#本科毕业论文" class="headerlink" title="本科毕业论文"></a>本科毕业论文</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>2018年毕业 之前做过大学生创新创业项目 所以毕业设计做了个类似的</p>
<p><strong>环境监测系统的设计与实现</strong></p>
<a id="more"></a>

<h2 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h2><p>本 科 生 毕 业 论 文</p>
<p>题目：环境监测系统的设计与实现</p>
<p>Title: Environment Monitoring SystemDesign and Implementation</p>
<pre><code>教学单位 计算机科学与技术院   
姓    名        **          
学    号     2014xxxx   
年    级        2014 级       
专    业     物联网工程       
指导教师        **          
职    称        讲师          </code></pre><p>2018年5月2日<br>摘要<br>众所周知，危险化学品在生产、运输、储存过程中对环境的要求很高，如果稍有大意将其置于某些温度，湿度下就有可能使其物理性质或者化学性质发生改变而造成严重事故并造成重大的人民财产损失，甚至是伤及生命。因此实时检测危险化学品储存仓库的环境数据也就变得十分必要。实时地对危化品储存环境进行监测并做出及时反馈是一项重要内容和难点所在。在这篇文章中，我们将开始以下研究。<br>基于Arduino的危险化学品环境监测系统的实现构建危险化学品储存过程中物品的物联网监测。为了实时获得危险化学品储存环境的实际数据，采用传感层，传输层和应用层的经典三层结构。Arduino的硬件平台构建了物联网的感知层，并通过硬件设备（如照明，火焰和温度传感器）实时获取危险化学品存储环境的温度。<br>根据已有经验对于危险化学物所在仓库进行温度，光照、火焰等各项参数设定阈值。一旦超过安全范围便进行自我调节，使仓库恢复储存危险化学品的安全条件。如果系统自我调节后仍然超过阈值则进行报警，提示相关人员对仓库进行相关处理。<br>本系统旨在能够利用Arduino搭建的环境监测系统对危化品仓库的各项环境参数进行实时的监测，并对因环境不适宜而造成潜在风险进行及时预警，从而节约人力物力，降低危化品因存储环境不适宜而发生意外事故的几率，保护人民的财产及生命安全。</p>
<p>关键字：危化品储存；环境监测；Arduino</p>
<p>Abstract<br>As we all know, hazardous chemicals are highly demanding on the environment during production, transportation, and storage. If they are exposed to certain temperatures and humidity, they may cause changes in their physical properties or chemical properties and cause serious accidents. It also caused major loss of people’s property and even hurt lives. Therefore, it becomes necessary to detect the environmental data of a hazardous chemical storage warehouse in real time. Real-time monitoring and storage of dangerous chemicals storage environment is an important content and difficulty. In this article, we will start the following study.<br>Based on Arduino’s implementation of a hazardous chemicals environmental monitoring system, the IoT monitoring of articles during the storage of dangerous chemicals was established. In order to obtain real-time data on the storage environment of hazardous chemicals in real time, the classical three-layer structure of the sensing layer, transmission layer and application layer was adopted. Arduino’s hardware platform builds the perception layer of the Internet of Things and acquires the temperature of hazardous chemical storage environments in real time through hardware devices such as lighting, flame, and temperature sensors.<br>According to the existing experience, the temperature, lighting, flame and other parameters of the warehouse where hazardous chemicals are located are set with thresholds. Once it exceeds the safe range, it self-adjusts and restores the warehouse to safe conditions for storing dangerous chemicals. If the system still exceeds the threshold after self-adjustment, an alarm is issued, prompting the relevant personnel to perform relevant processing on the warehouse.<br>The system aims to use the environmental monitoring system built by Arduino to perform real-time monitoring of all environmental parameters of hazardous chemicals warehouses, and to provide early warning of potential risks due to unfavorable environment, thereby saving manpower and material resources and reducing hazardous chemicals. The chance of accidents due to inappropriate storage environment protects people’s property and lives.</p>
<p>Keywords: Dangerous chemicals storage; Environmental monitoring; Arduino</p>
<ul>
<li><p>目录</p>
<ul>
<li>第1章 绪论    <ul>
<li>1.1 问题的提出与研究意义    </li>
<li>1.2 国内外相关研究进展    </li>
<li>1.3 本文的研究方案    </li>
<li>1.4 研究内容概述    </li>
</ul>
</li>
<li>第2章 开发平台及技术简介    <ul>
<li>2.1 Arduino平台及环境搭建    </li>
<li>2.2 串口通信技术    </li>
<li>2.3 Adobe Dreamweaver    </li>
<li>2.4 本章小结    </li>
</ul>
</li>
<li>第3章 需求分析和总体设计    <ul>
<li>3.1 系统需求分析    </li>
<li>3.2 系统整体设计    </li>
<li>3.3 本章小结    </li>
</ul>
</li>
<li>第4章 硬件部分的设计与实现    <ul>
<li>4.1硬件模块设计与实现    </li>
<li>4.2报警模块    </li>
<li>4.3本章小结    </li>
</ul>
</li>
<li>第5章 软件部分的设计与实现    <ul>
<li>5.1 串口数据传输及实现    </li>
<li>5.2监测数据的展示    </li>
<li>5.3本章小结    </li>
</ul>
</li>
<li>第6章结论    </li>
</ul>
</li>
<li><p>参考文献    </p>
</li>
<li><p>致谢    </p>
</li>
</ul>
<p>第1章 绪论<br>1.1 问题的提出与研究意义<br>1.1.1 问题的提出<br>由于危险化学品是具有毒害、腐蚀、爆炸、燃烧、助燃等性质，对人体、设施、环境具有危害的剧毒化学品和其他化学品。所以才在储存过程中需要严格遵守《危险化学品安全管理条例》。一旦危险化学品在储存过程中发生了事故会给工作人员以及周围人民造成极大的危害。因而，危险化学品仓储管理人员要尽可能地限制运输风险，提升仓储安全性是一个关键课题。危险化学品仓储风险分析的一项主要任务是明确危险化学品安全贮存所需的环境数据。从而使仓库的各项环境数据始终维持在安全范围内。环境数据包括温度，湿度，气压，光照，烟雾浓度等。因此系统面临两个关键的问题：<br>（1）怎么获取有关危险化学品储存的实时数据。在危险化学品储存过程中，需要实时监测大量数据，包含危险化学品仓库的温度，湿度和光照。这些实时数据的采集和传输是构建危险化学品储存环境监测系统的根本。<br>（2）如何快速对于危险环境做出反应。因为危险化学品出现事故伤害巨大，因此需要监测系统具有较高的效率，故采用系统自动控制调节储存环境。但是当系统无法及时调节并超出安全阈值时则需要报警，进行人为干预。<br>1.1.2 研究的意义<br>危险化学品的存放跟随着各类潜在事故的产生。事故的社会后果是相当大的。实时监测环境是处理这些问题的有效方法。所以，本文对危险化学品储存环境的监测具有理论和现实意义。<br>1.1.3 危化品储存环境监测的重要性<br>危险化学品的储存环境条件可以用环境参数来表征。更常见的危险化学品储存环境参数是温度，湿度，烟雾，灰尘等。大多数危险品储存对温度和湿度都很敏感; 上述环境参数所造成的破坏及其预防，要求监管办法十分到位，仓管人员对其重视程度较高，但是限于仓储规模、投资力度、从事人员经验欠缺或专业知识匮乏等缘故，光强、空气含氧量以及二氧化碳含量等参数监测时常被忽视或忽略，造成无法挽救的经济损失和人身伤害在危险化学品储存环境中，最常测量的参数是温度和相对湿度。普通危险化学品可以在室温下储存。室温也称为常温，普遍在25°C左右，常温库通常在0-30℃之间。危险化学品储存环境中温度和湿度的变动对危险化学品的理化性质影响最为显著。不同类别的危险化学品对其环境的温度和湿度具有不同程度的适应性。常规危险化学物质可以在室温下保管。此外，在危险的化学物质不适宜的保存环境中储存也许会爆炸，并且对温度和湿度敏感的危险化学品甚至会导致事故。光强度是呈现发光强度的物理量。在不适宜的存储环境中，很多危险化学物质对光强度异常敏感。显露于强光下后，许多危化品是挥发性的，或者它们的化学特性趋于转变，乃至引起爆炸。可是，仓库员工时常忽视危险化学品仓库的存储。<br>遵照危化品的物理化学特质及其对各式危险化学品贮存环境参数的不同程度的敏感性，依据贮存规格与环境参数之间的监测关联，对某一类危化品可以有针对性地存储。不同的危险化学品被贮存，并且被监测危化品的储存环境参数是不同的。危险化学品储存环境中有很多可测量的参数。除了诸如温度，湿度，气流，光强度和空气中的氧含量之类的参数之外，还有其他物理和化学量，例如大气压力，物体位移，土壤pH和其他环境参数。对于安全范围环境参数，本文采用了一般适用的参考数据。在监测实际危险化学品储存环境时，务必遵照危险化学品的物理储存，化学特性和变更情景实行监测。<br>1.2 国内外相关研究进展<br>自从2005年推出以来，Arduino受到了外国开发商的普遍关注。源于Arduino的优势，越来越多的专业硬件开发商着手使用Arduino研发他们的项目和产品;越来越多的软件开发人员使用Arduino加入硬件和物联网的发展领域。在大学里，自动化，软件乃至艺术也开发Arduino相关课程。<br>1.3 本文的研究方案<br>本文所讨论的危化品储存环境监测硬件部分以有线的串口通讯方式，这种传输方式简便易行而且数据传输比较精确，且延迟低，不受网络故障影响。因此采用有限的串口通讯方式传输信息。此外，现有的环境监测系统基本都是基于单片机的硬件系统，其电路复杂，驱动程序复杂，不易二次维护，开发成本高。本文的研究的是危化品储存环境监测，考虑到需定期维护测试，更改环境参数的阈值，多处部署等因素，最后选定Arduino作为系统硬件。首先Arduino具有使用方便、购买成本低。其次有与其他设备通信简单优点。因此，本文的危化品储存环境监测系统使用开源的Arduino硬件平台以及有线串口通信技术进行设计开发，具有低成本、建立快捷、操作简单、硬件电路响应迅速等特点。<br>另外，现有市面上的基于单片机、基于Zigbee环境监测系统都是采用各种类型单片机开发的。经过对比，初学者适合用51单片机；PIC系列单片机比较适合产量大、稠合性高的系统，综合考虑到了功耗、价格、性能等多种因素，通常认为PIC系列单片机由于性能较高、功耗低，是目前最实用的单片机。Arduino硬件平台是基于AVR指令集的单片机，Arduino具有易用、适用范围大等特点。由于国内之前没有涉及，最近才开始兴起，还处于技术发展期。<br>具体的研究方案如下：<br>（1）研究Arduino开源平台技术和有线串口通信技术，搭建Arduino平台开发环境。<br>（2）进行系统功能设计、硬件线路设计、各功能模块设计。<br>（3）设计基于主控板的硬件电路的连接，开发控制程序。<br>（4）pc端开发编写串口通信软件，完成硬件系统对各模块的驱动。<br>（5）网页设计以及建立相应的数据库。<br>（6）对系统的软件和硬件进行调试、优化，并展示其主要功能。<br>1.4 研究内容概述<br>本文的主要目的是设计一种价格低廉，安装方便，系统简易的危化品储存环境监控系统。并且选择有线的方式进行数据传输，本文重点对以下几个方面进行研究：<br>（1）传感器，扩展模块的选择与功能实现。<br>（2）下位机硬件系统的搭建。<br>（3）上位机软件系统的编程。<br>第二章中，重点介绍系统中使用的各开发平台以及相关技术；第三章中，着重介绍本系统的需求分析以及硬件系统总体设计；第四章中，重点介绍本系统的数据采集模块、串口通信模块、数据展示模块以及实现过程；第五章中，进行总结和展望。<br>第2章 开发平台及技术简介<br>2.1 Arduino平台及环境搭建<br>基于开源代码的硬件和软件平台Arduino是一个具有利用类似Java和C语言的Processing/Wiring开发环境。该平台由两部分组成：硬件（包含微处理器，印刷电路板等）和接口和编程软件的语言。Arduino硬件电路板如图2.1。</p>
<p>图2.1 Arduino硬件电路板<br>Arduino硬件电路板通过数据传输线与PC机进行连接，因此PC机上还需安装USB驱动。USB的圆口连接在主控板上，扁口接在PC机上，如果Arduino电路板的电源指示灯点亮，说明电路板与计算机连接成功。IDE界面如图2.2所示。</p>
<p>图2.2 Arduino IDE<br>2.2 串口通信技术<br>本系统中Arduino硬件电路板与电脑采用串口的方式建立通信。在实验前确定电脑与Arduino硬件电路板之间的通信波特率。在本系统中各项实验均采用9600bps。调试过程中在Arduino IED内的串口监视器进行数据查看。并采用了python语言对串口通信的数据进行操作，将数据存入数据库或从数据库读取数据并传输至Arduino硬件电路板。<br>2.3 Adobe Dreamweaver<br>Adobe Dreamweaver简称“DW”，最初是为美国公司MACROMEDIA研发的，2005年由Adobe收购。DW是一个所见即所得的网页代码编辑器，它集成了网页的建立和管理。通过支持HTML，CSS，JavaScript等内容，设计师和程序员可以在任何地点迅速建立和运行网站。本系统中为了能让实时监测到的环境数据简洁直观展现给危化品仓库管理人员采用了网页的形式进行展示。选用Adobe Dreamweaver则是因为它拥有制作效率高，全面的css支持增强功能。可以优质高效的搭建出本系统所需要的数据展示页面。<br>2.4 本章小结<br>本章主要介绍了硬件开发平台Arduino以及其环境搭建。Arduino硬件系统和电脑之间通信所使用的串口通信技术和统所用的通信频率，数据展示平台所使用的软件以及选取该软件的原因。<br>第3章 需求分析和总体设计<br>3.1 系统需求分析<br>天津滨海新区大爆炸事故造成了巨大人员伤亡和财产损失，举国为之震惊，对危险化学品的安全管理问题也再次进入公众视野。危险化学品事故，特别是爆炸事件，造成严重后果。以天津滨海新区爆炸事件为例，国家地震台网清楚记录了在天津发生的两起爆炸事件。时间间隔大约是30秒，第二个数量级更高，相当于21吨TNT。就等效换算而言，战斧巡航导弹的TNT当量约为454千克，即第一次爆炸等同于7枚战斧巡航导弹的能量，第二次爆炸接近46枚战斧巡航导弹。地面爆炸，威力巨大。这表明危险化学品的储存安全性应该得到我们的重视。据此我们分析出危化品储存过程中的环境要严格符合《危险化学品安全管理条例》规定。进而分析出危化品储存环境监测系统所需要达到的要求：<br>（1）感知层需要实时并准确的监测当前环境的温度、光照、火焰等各项参数。<br>（2）传输层需要测到的环境数据利用串口传到电脑端。<br>（3）应用层需要将采集到的危化品环境数据存入数据库，将这些数据进行分析处理，最后展示在网页上。<br>3.2 系统整体设计<br>本文所介绍的系统是危化品储存环境监测。本系统设计方案的框架图，本系统主要分以下几个部分。<br>（1）Arduino硬件电路板，主要的作用是作为传感器与电脑之间交互的桥梁，能够对传感器所传输过来的数据进行处理，实现对各个引脚高低电平的设置以及模拟信号的接收。<br>（2）串口通信部分，主要的作用就是将传感器采集到的环境数据进行传输，将数据通过串口传输到电脑。<br>（3）数据展示部分，将串口传输的数据存入数据库，最后通过网页将环境数据实时的显示在电脑上。<br>（4）传感器模块。一共选取了三个传感器，作为环境信息采集。第一是温度传感器，作用是采集危化品所处环境的温度信息数据。第二是光照传感器，主要作用是用来检测危化品储存环境的光照情况。第三是火焰传感器，用来监测危化品仓库内是否有火焰。这三个传感器模块没有数据处理功能，只能将数据传输至Arduino核心控制单元进行处理。<br>如图3.1所示，介绍本系统的整体结构和框架设计：</p>
<p>图3.1 危化品储存环境监测系统架构图<br>3.3 本章小结<br>本章根据危化品储存环境做了实际需求的分析，明确了我所做的环境监测系统的整体设计和要求，并且根据这些信息，建立这个危化品环境监测系统需要达到的设计目标，和需要实现的功能。本文研究的危化品储存环境监测系统是基于Arduino平台设计开发的。系统包括：由Arduino UNO R3开发板和LM35温度传感器，光线传感器，火焰传感器组成的监测装置；蜂鸣器组成的报警装置；电脑端数据展示部分。<br>第4章 硬件部分的设计与实现<br>4.1硬件模块设计与实现<br>据调查现有的环危化品环境监测系统普遍都是基于单片机的硬件系统，但是单片机电路复杂，驱动程序复杂，开发成本高。考虑到需定期维护测试，更改环境参数的阈值，选定Arduino作为系统硬件。Arduino硬件平台具有低成本、建立快捷、操作简单、硬件电路响应迅速等特点。其硬件系统的主要功能模块如图4.1所示。</p>
<p>图4.1 硬件系统的主要功能模块<br>硬件模块的主要工作在于正确连接各个传感器到Arduino主控板上，并进行调试，使各传感器能正常进行工作，能够较为准确的测量出危化品储存环境的各项环境参数。温度，光照，火焰其测量值无严重偏差。并且能顺利的利用串口通信将数据传输到电脑进行展示。<br>系统工作流程图如4.2所示。</p>
<p>图4.2 系统工作流程图<br>（1）温度采集模块，该系统利用更流行的温度传感器LM35。LM35是一种相当常见且易于操纵的温度传感器元件。它只需求一个LM35元件来应用组件。只利用模拟接口。难点在于该算法将读取的模拟值变换为实际温度。系统使用LM35实行危险化学品存储环境的温度测量。该模块将监测到的数据通过串口进行传输，在电脑端的串口监视器进行显示。温度采集模块接线如图4.3所示。所需器件如下：<br>直插LM35器件：1个<br>面包板：1个<br>面包板跳线：1 扎<br>接线图如4.3所示</p>
<p>图4.3 温度采集模块接线图<br>测量温度数据如图4.4所示</p>
<p>图4.4 测量到的温度数据<br>（2）光照强度测量，本系统采用的光敏电阻来测量周围环境的光照情况。对于危化品环境监测系统，光照测量器件应放置到危化品附近的位置，用来监测危化品附近的光照情况。光敏电阻是一种由半导体光电效应构成的电阻，它是一种电阻，其电阻随着入射光的强度而改变;入射光强，电阻减小，入射光较弱，电阻增大。光敏电阻通常用于光测量，光控制和光电转换（将光变化转换为电变化）。此处为了能直观展示危化品环境的光照强度，故加入了led小灯，利用小灯的明暗变化来展示环境内光照强度的变化。光照强度模块接线如图4.5所示。<br>所需器件如下：<br>光敏电阻：1个<br>红色M5 直插LED灯：1个<br>10KΩ直插电阻：1个<br>220Ω直插电阻：1个<br>面包板：1个<br>面包板跳线：1 扎</p>
<p>图4.5 光照强度采集模块接线图<br>（3）火焰监测模块，主要作用是监测危化品所处环境是否有明火。由于各类危化品物理性质与化学性质不稳定。如有火焰极易使危化品爆炸，所以在危化品周围部署火焰传感器，一旦监测发现火焰便进行报警以便能够及时对其进行处理，避免造成重大危险事故。在该系统中，使用特殊的红外接收管来检测火焰，然后将火焰的亮度转换为高低变化的电平信号，并输入到中央处理器。中央处理器根据信号的变化进行相应的程序处理。<br>火焰传感器的连接原理如图4.6所示。</p>
<p>图4.6 火焰传感器连接原理图<br>所需器件如下：<br>火焰传感器：1个<br>蜂鸣器：1个<br>下拉电阻：10K电阻1个<br>多彩面包板实验跳线：1扎<br>火焰监测模块实物连接如图4.7所示</p>
<p>图4.7 火焰监测模块实物连接图<br>火焰传感器连接到模拟5，蜂鸣器连接到第9脚，火焰传感器连接到模拟0引脚，以达成这个实验的连接。<br>4.2报警模块<br>此部分是功能是在危化品储存的环境参数发生异常时进行报警。这一部分采用了蜂鸣器这个元器件。通过跳线连接在Arduino主控板上，当温度、光照、火焰这三个数据中任意一个数据发生异常（超出安全范围）便立即将该引脚电平置为高电平，触发报警。具体代码在各传感器数据测量模块的代码内。报警模块的则是根据监测到的数据时刻等待触发，超过预定参数的安全范围就会发生报警。<br>4.3本章小结<br>本章主要是介绍了基于Arduino的危化品储存环境监测系统设计与实现的硬件部分。将整个硬件系统分为传感器模块和报警模块两个部分。先从硬件的整体结构开始阐述，传感器与蜂鸣器之间的逻辑关系，当环境参数偏离安全范围则蜂鸣器响应，开始报警。接下来的内容是对传感器与Arduino主控板之间的连接进行了详细的阐述。<br>第5章 软件部分的设计与实现<br>5.1 串口数据传输及实现<br>Arduino自带串行接口UART，它可以连接USB线与计算机通信，是发送监测到的危化品储存环境的监测数据和接收上位机传输的控制指令的一种方式。传输的数据可以通过串口监视器进行查看，如图5.1所示。<br>展示的是当前环境下的温度数据。</p>
<p>图5.1 串口监视器下的温度数据<br>数据传输到电脑端，为了能够保存数据并最终进行展示，采用将数据存入数据库的方式。具体实现方式是利用python读取Arduino通过串口发来的数据，既读取相应端口的数据，每次收到端口发来的数据，便依据接收数据的时间顺序依次将数据存入事先搭建好的数据库中。串口数据传输原理图如图5.2所示。</p>
<p>图5.2 串口数据传输原理图<br>python程序成功将温度数据存入事先搭建好的数据库中，如图5.3所示。</p>
<p>图5.3 python串口程序将温度写入数据库<br>5.2监测数据的展示<br>这部分的功能主要是将存入到数据库的危化品环境数据展示给危化品管理人员。为了能够直观的展示数据，采用了网页的形式。数据展示界面与数据库之间的逻辑关系如下图5.4所示。</p>
<p>图5.4 数据展示界面与数据库的逻辑关系<br>实时展示危化品环境的数据的页面如图5.5所示。</p>
<p>图5.5 危化品环境数据展示界面<br>5.3本章小结<br>本章主要讨论了基于Arduino的危化品储存环境监测系统的软件部分。在这个部分主要介绍了两部分的内容。第一部分是串口程序：危化品环境数据如何被python从串口读取并将其写入到数据库中。第二部分是数据展示界面：设计并实现了展示危化品环境数据的网页，实时显示各项环境数据。</p>
<p>第6章结论<br>经过长时间的搜集资料，整理资料，并亲自动手实践，最终完成了这个基于Arduino的危化品环境监测系统。<br>基于Arduino的危险化学品储存环境监测系统使用了Arduino主控板和SPI通信协议具有经济、安全、灵敏度高、可靠、操作简单便于维护等特点。能有效的预防危化品储存仓库发生因环境不适宜而给人们带来的危害，保护人们的生命财产安全。本系统使用Arduino主控板为载体实现硬件电路的搭建，开发系统控制程序和报警模块；在数据传输部分采用了脚本语言python对采集到的危化品环境数据进行读取并操作数据库，将数据写入数据库；最后使用Adobe Dreamweaver开发页面，用于展示监测到的环境参数。<br>在这次独立完成一个项目的过程中收获了很多，无论是从底层的Arduino器件选择，还是串口通信读取数据并存储到数据库，数据库的搭建，网页的设计与实现。每一步走来都是不小的挑战，每一部分的设计，实现，调试都需要认真去完成。所以当完成这个项目时，内心充满了喜悦。<br>由于时间有限本系统的很多模块的功能和界面没有进行细致的优化。也还有许多功能可以添加。例如，通过网页设置危化品环境参数的安全范围，而不需要每次需要修改环境安全范围时都去重新烧录Arduino主控板内的程序。总之我需要学习的只是还很多，本次项目让我收获了很多。<br>参考文献</p>
<p>[1]岳明.信息化环境下基于成人学习者学习风格的教学设计研究[D].北京理工大学, 2015.<br>[2]刘琳琳.基于物联网的危化品运输泄漏事故仿真系统[D].大连:大连理工大学,2012.<br>[3]朱晓东,刘军.仓储环境监测参数分析[J].物流技术,2009(10):25-27.<br>[4]李文华.基于传感器主线的初中机器人实验项目设计研究[D].南京师范大学,2014.<br>[5]王朝华,陈德艳,黄国宏,等.基于Android的智能家居系统的研究与实现[J].计算机技术与发展,2012(2012年06):225-228.<br>[6]    杨晓羽,张黔,许霄彤,等.基于Arduino与Android平台下的智能台灯APP的设计[J]. 电子世界,2017(5):180-181.<br>[7]蔡程程.智能化LED补光灯的设计[D].杭州电子科技大学,2013.<br>[8]杨振堃,胡春燕.基于Arduino的智能专业实践教学设计[J].计算机教育,2015 (18):95-98.<br>[9]赵娜.无线火灾报警控制器的研制[D].哈尔滨:哈尔滨工业大学,2006.<br>[10]张佐权.竞赛用灭火机器人智能优化技术的研究与实现[D].电子科技大学,2012.<br>致谢<br>当写到这里时，不禁百感交集，毕业设计即将完成，我也即将从学校毕业。回顾这四年来的学习与生活，不禁感慨万千。感谢母校，为我们创造良好的学习环境，自由开放，求真务实的学风。激励我不断学习进步。<br>在此感谢每一位教过的老师，是您们的无私奉献，耐心教导一步步引导我走向计算机科学知识的大门，鼓励并帮助我前进，不厌其烦的为我们解决学习中遇到的困难。感谢罗洪老师的耐心指导，从论文的选题、研究到设计实现，罗洪老师给予我很多支持和帮助。在与老师的反复讨论和交流中，我学到了很多，学术上自学能力的重要性，以及独立思考能力的培养，更重要的是老师严谨细致的科研态度值得我去学习。<br>感谢这四年中给予我关心和帮的每一位同学。我想感谢他们在学习和生活方面的帮助和支持，以及在这四年中对我的关心和照应。<br>感谢我的父母和家人，他们对我学习的无条件支持和对生活的关注使我能够专心学习。我才一直有动力继续前进，并使我能够顺利完成四年的学业。<br>最后，我要感谢全体的老师对我的论文提出意见和指正。</p>
]]></content>
  </entry>
  <entry>
    <title>No_0020_ffmpeg常用命令</title>
    <url>/2020/05/02/No_0020_ffmpeg%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="ffmpeg常用命令"><a href="#ffmpeg常用命令" class="headerlink" title="ffmpeg常用命令"></a>ffmpeg常用命令</h1><h2 id="放大声音"><a href="#放大声音" class="headerlink" title="放大声音"></a>放大声音</h2><p><strong>放大为当前音量的n倍</strong></p>
<p>例如放大2倍 如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.aac -filter:a <span class="string">"volume=2"</span> output.aac</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="音频和视频同时2倍速"><a href="#音频和视频同时2倍速" class="headerlink" title="音频和视频同时2倍速"></a>音频和视频同时2倍速</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i test.mp4 -filter_complex <span class="string">"[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]"</span> -map <span class="string">"[v]"</span> -map <span class="string">"[a]"</span> <span class="built_in">test</span>-2.mp4</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>No_0021_justmysocks使用感受</title>
    <url>/2020/05/02/No_0021_justmysocks%E4%BD%BF%E7%94%A8%E6%84%9F%E5%8F%97/</url>
    <content><![CDATA[<h1 id="Just-My-Socks-使用感受"><a href="#Just-My-Socks-使用感受" class="headerlink" title="Just My Socks 使用感受"></a>Just My Socks 使用感受</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>使用了Just My Socks一个月后的一些感受，谈一谈它的优点和不足 主观感受仅供参考</p>
<h2 id="优点-不足"><a href="#优点-不足" class="headerlink" title="优点 不足"></a>优点 不足</h2><a id="more"></a>

<table>
<thead>
<tr>
<th>优点</th>
<th>不足</th>
</tr>
</thead>
<tbody><tr>
<td>稳定</td>
<td>不能看奈飞</td>
</tr>
<tr>
<td>速度快</td>
<td>只支持shadowsocks</td>
</tr>
<tr>
<td>节点少</td>
<td>价格不够亲民</td>
</tr>
<tr>
<td>针对性（不同运营商有各自线路方案）</td>
<td>未完全汉化</td>
</tr>
</tbody></table>
<p><a href="https://justmysocks.net/members/aff.php?aff=11376" target="_blank" rel="noopener">点此进入 Just My Socks官网</a></p>
]]></content>
  </entry>
  <entry>
    <title>No_0022_YouTube快捷键</title>
    <url>/2020/05/02/No_0022_YouTube%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="YouTube快捷键"><a href="#YouTube快捷键" class="headerlink" title="YouTube快捷键"></a>YouTube快捷键</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>再看油管的时候，偶然间碰到了数字键，发现数字键可以跳转到视频的不同位置 0-9 对应着把视频分成10段 所对应着的视频段开头</p>
<a id="more"></a>

<h2 id="查资料"><a href="#查资料" class="headerlink" title="查资料"></a>查资料</h2><p>查了官方文档 发现了不少快捷键 希望整理下常用的 如下</p>
<h2 id="YouTube播放器常用快捷键"><a href="#YouTube播放器常用快捷键" class="headerlink" title="YouTube播放器常用快捷键"></a>YouTube播放器常用快捷键</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>空格键</td>
<td>播放/暂停</td>
</tr>
<tr>
<td>m</td>
<td>将视频静音/取消静音。</td>
</tr>
<tr>
<td>向左/向右箭头</td>
<td>快进/快退 5 秒钟。</td>
</tr>
<tr>
<td>j</td>
<td>在播放器中快退 10 秒。</td>
</tr>
<tr>
<td>l</td>
<td>在播放器中快进 10 秒。</td>
</tr>
<tr>
<td>,（英文逗号）</td>
<td>当视频处于暂停播放状态时，跳转至下一帧。</td>
</tr>
<tr>
<td>.（英文句号）</td>
<td>当视频处于暂停播放状态时，跳转至上一帧。</td>
</tr>
<tr>
<td>&lt;</td>
<td>加快视频播放速度</td>
</tr>
<tr>
<td>&gt;</td>
<td>减慢视频播放速度</td>
</tr>
<tr>
<td>数字0到9</td>
<td>跳转到0%到90%</td>
</tr>
<tr>
<td>f</td>
<td>全屏切换</td>
</tr>
<tr>
<td>c</td>
<td>字幕开关</td>
</tr>
<tr>
<td>i</td>
<td>悬浮窗口</td>
</tr>
</tbody></table>
<h2 id="官方文档链接"><a href="#官方文档链接" class="headerlink" title="官方文档链接"></a>官方文档链接</h2><p><a href="https://support.google.com/youtube/answer/7631406?hl=zh-Hans" target="_blank" rel="noopener">YouTube键盘快捷键</a></p>
]]></content>
  </entry>
  <entry>
    <title>No_0023_开启独立AMD显卡</title>
    <url>/2020/05/02/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/</url>
    <content><![CDATA[<h1 id="开启独立AMD显卡"><a href="#开启独立AMD显卡" class="headerlink" title="开启独立AMD显卡"></a>开启独立AMD显卡</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>作为一个计算机相关专业的学生，在我的笔记本电脑已经使用近5年后才我才学会利用独立显卡来提升电脑性能</p>
<p>笔记本电脑可能有两个显卡，我的电脑是一颗Intel的核显，一颗是AMD的独显</p>
<p>接下来演示如何在玩游戏时开启笔记本电脑的AMD独立显卡</p>
<a id="more"></a>

<h2 id="查看显卡信息"><a href="#查看显卡信息" class="headerlink" title="查看显卡信息"></a>查看显卡信息</h2><p>方法一</p>
<p>Windows10打开任务管理器查看</p>
<p>点击切换下方的详细信息与简略信息，选择上方的性能选项卡，分别点击GPU 0和GPU 1来查看显卡信息</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/rw-1024x576.jpg?raw=true" alt="任务管理器查看显卡信息"></p>
<p>方法二：利用GPU-Z来查看GPU信息</p>
<p>点击下方红框位置切换，显示不同显卡的信息</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/GPUZ.gif?raw=true" alt="GPU-Z查看显卡信息"></p>
<h2 id="设置使用独立显卡的程序"><a href="#设置使用独立显卡的程序" class="headerlink" title="设置使用独立显卡的程序"></a>设置使用独立显卡的程序</h2><p>第一步：右键选择Radeon设置</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/youjian-1024x576.jpeg?raw=true" alt="右键radeon"></p>
<p>如果右键没有Radeon设置，可以点击开始菜单，寻找AMD settings，或者你需要安装AMD的显卡驱动程序，<a href="https://www.youtube.com/watch?v=QBYCSwnSSCs" target="_blank" rel="noopener">点击跳转学安装AMD显卡驱动YouTube</a></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/output-1024x576.jpeg?raw=true" alt="开始菜单AMDsetting"></p>
<p>打开后选择系统</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/AMD%E7%B3%BB%E7%BB%9F.jpeg?raw=true" alt="AMD系统"></p>
<p>依次点击 可交换显卡 运行中的应用程序 已安装的配置好的应用程序</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/AMD%E5%8F%AF%E4%BA%A4%E6%8D%A2%E6%98%BE%E5%8D%A1jpeg.jpeg?raw=true" alt="AMD可交换显卡"></p>
<p>点击浏览选项</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/AMD%E6%B5%8F%E8%A7%88%E9%80%89%E9%A1%B9.jpeg?raw=true" alt="AMD浏览选项"></p>
<p>在弹出的窗口中选择你要使用独立显卡运行的程序（这里以英雄联盟为例）</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/AMD%E9%80%89%E6%8B%A9%E7%A8%8B%E5%BA%8F.jpeg?raw=true" alt="AMD选择程序"></p>
<p>程序位置可以通过右键属性查看</p>
<p>英雄联盟的启动程序在”E:\Program Files\腾讯游戏\英雄联盟\TCLS\Client.exe”(不是桌面快捷方式的路径)</p>
<p>炉石传说启动程序在”E:\exeinstall\Hearthstone\Hearthstone Beta Launcher.exe”（ 不是桌面快捷方式的路径 ）</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/%E7%A8%8B%E5%BA%8F%E8%B7%AF%E5%BE%84.jpeg?raw=true" alt="程序路径"></p>
<p>按照启动程序的所在路径，在刚刚设置程序使用独立显卡的弹窗里选择好程序</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0023_%E5%BC%80%E5%90%AF%E7%8B%AC%E7%AB%8BAMD%E6%98%BE%E5%8D%A1/%E9%80%89%E5%AE%9A%E7%A8%8B%E5%BA%8F.jpeg?raw=true" alt="选定程序"></p>
<p>最后选择程序双击即可</p>
<p>你所添加的这个程序就会使用AMD独立显卡运行</p>
]]></content>
  </entry>
  <entry>
    <title>No_0024_拆开鼠标一共分几步</title>
    <url>/2020/05/03/No_0024_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="拆开鼠标一共分几步"><a href="#拆开鼠标一共分几步" class="headerlink" title="拆开鼠标一共分几步"></a>拆开鼠标一共分几步</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>笔记本自带的鼠标右键不回弹了，没法用了，于是我便在网上下单，买了一个新的，而且换上了备用鼠标</p>
<p>于是，便想把鼠标拆开，看看里面有什么</p>
<a id="more"></a>

<p><strong>警告 鼠标内部塑料比较脆弱 建议拆废弃的鼠标 好鼠标就不要拆了</strong></p>
<h2 id="拆鼠标步骤"><a href="#拆鼠标步骤" class="headerlink" title="拆鼠标步骤"></a>拆鼠标步骤</h2><p>1.找到鼠标上的螺丝并拧下来 可能有一个或者更多 一定要全部找到</p>
<p><strong>撕开胶垫</strong></p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E8%83%B6%E5%9E%AB%E6%A0%87%E8%AE%B0.jpg" alt="胶垫图片"></p>
<p><strong>找到螺丝并拧开</strong></p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E8%9E%BA%E4%B8%9D%E6%A0%87%E8%AE%B0.jpg" alt="螺丝"></p>
<p>2.扣开上盖</p>
<p><strong>扣开上盖后结构如下</strong></p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E6%8B%86%E4%B8%8A%E7%9B%96_upload.jpg" alt="鼠标内部"></p>
<p>3.取下滚轮</p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E5%8F%96%E4%B8%8B%E6%BB%9A%E8%BD%AE_upload.jpg" alt="鼠标芯片"></p>
<p>4.依次取下各个部件</p>
<p><strong>鼠标底座</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E5%BA%95%E5%BA%A7_upload.jpg?raw=true" alt="鼠标底座"></p>
<p>鼠标电路板</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E7%94%B5%E8%B7%AF%E6%9D%BF_upload.jpg?raw=true" alt="鼠标电路板"></p>
<p><strong>鼠标各部件说明</strong></p>
<p><img src="https://raw.githubusercontent.com/tothepythonmoon/2badaoblog/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E9%83%A8%E4%BB%B6_upload.jpg" alt="鼠标各部件说明"></p>
<p><strong>鼠标电路板说明</strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0008_%E6%8B%86%E5%BC%80%E9%BC%A0%E6%A0%87%E4%B8%80%E5%85%B1%E5%88%86%E5%87%A0%E6%AD%A5/%E9%BC%A0%E6%A0%87%E7%94%B5%E8%B7%AF%E6%9D%BF%E8%AF%B4%E6%98%8E_upload.jpg?raw=true" alt="鼠标电路板说明"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>简单拆开了鼠标 了解了下里面的构造 可以看见鼠标右键坏了 不能回弹 <del>是我打了太多的英雄联盟 用了太多右键</del></p>
]]></content>
  </entry>
  <entry>
    <title>YouTube快捷键</title>
    <url>/2020/04/30/YouTube%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="YouTube快捷键"><a href="#YouTube快捷键" class="headerlink" title="YouTube快捷键"></a>YouTube快捷键</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>再看油管的时候，偶然间碰到了数字键，发现数字键可以跳转到视频的不同位置 0-9 对应着把视频分成10段 所对应着的视频段开头</p>
<a id="more"></a>

<h2 id="查资料"><a href="#查资料" class="headerlink" title="查资料"></a>查资料</h2><p>查了官方文档 发现了不少快捷键 希望整理下常用的 如下</p>
<h2 id="YouTube播放器常用快捷键"><a href="#YouTube播放器常用快捷键" class="headerlink" title="YouTube播放器常用快捷键"></a>YouTube播放器常用快捷键</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>空格键</td>
<td>播放/暂停</td>
</tr>
<tr>
<td>m</td>
<td>将视频静音/取消静音。</td>
</tr>
<tr>
<td>向左/向右箭头</td>
<td>快进/快退 5 秒钟。</td>
</tr>
<tr>
<td>j</td>
<td>在播放器中快退 10 秒。</td>
</tr>
<tr>
<td>l</td>
<td>在播放器中快进 10 秒。</td>
</tr>
<tr>
<td>,（英文逗号）</td>
<td>当视频处于暂停播放状态时，跳转至下一帧。</td>
</tr>
<tr>
<td>.（英文句号）</td>
<td>当视频处于暂停播放状态时，跳转至上一帧。</td>
</tr>
<tr>
<td>&lt;</td>
<td>加快视频播放速度</td>
</tr>
<tr>
<td>&gt;</td>
<td>减慢视频播放速度</td>
</tr>
<tr>
<td>数字0到9</td>
<td>跳转到0%到90%</td>
</tr>
<tr>
<td>f</td>
<td>全屏切换</td>
</tr>
<tr>
<td>c</td>
<td>字幕开关</td>
</tr>
<tr>
<td>i</td>
<td>悬浮窗口</td>
</tr>
</tbody></table>
<h2 id="官方文档链接"><a href="#官方文档链接" class="headerlink" title="官方文档链接"></a>官方文档链接</h2><p><a href="https://support.google.com/youtube/answer/7631406?hl=zh-Hans" target="_blank" rel="noopener">YouTube键盘快捷键</a></p>
]]></content>
  </entry>
  <entry>
    <title>chrono下载管理器</title>
    <url>/2020/05/02/chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h1 id="chrono下载管理器简介与安装"><a href="#chrono下载管理器简介与安装" class="headerlink" title="chrono下载管理器简介与安装"></a>chrono下载管理器简介与安装</h1><p><strong>本文介绍了下载及安装方式</strong></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>简单来说chrono是一款chrome的扩展程序 它是一款下载器 比chrome原生的下载器不知道<del>高到哪里去了</del></p>
<p>以下是截图</p>
<a id="more"></a>

<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/chrono%E6%88%AA%E5%9B%BE.png?raw=true" alt=""></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>1、好看的界面</p>
<p>2、按照下载状态进行文件分类</p>
<p>3、多选后的批量开始和暂停</p>
<p>4、对于某些文件下载比其他软件快 不出错 不中断 很流畅 （实际体验）</p>
<p>5、速度快 下载基本能跑满带宽</p>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>1、它从chrome商店下架了 我于2020年一月发现的 </p>
<p>2、利用本地安装方式后 会被chrome提示报错 需要手动关闭错误提示窗口（每次使用都有提示）</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>这款插件的离线安装包已被我备份在github（我也是从其他人github那里备份的）</p>
<p><a href="https://github.com/tothepythonmoon/2badaoblog/raw/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/0.9.3_0.zip" target="_blank" rel="noopener"><strong>下载链接</strong></a></p>
<p>这个扩展是0.9.3版本</p>
<h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><p>1、将插件下载到本地</p>
<p>2、点击chrome的扩展程序 如下图</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E6%8C%89%E9%92%AE%E6%88%AA%E5%9B%BE.png?raw=true" alt=""></p>
<p>3、开启开发者模式 <strong><em>在右上角</em></strong></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F.png?raw=true" alt=""></p>
<p>4、将下载好的zip安装包拖入chrome扩展程序页面</p>
<p>5、安装成功后的效果</p>
<p>你会在右上角的扩展插件处看到这个图标</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/chrono%E5%9B%BE%E6%A0%87.png?raw=true" alt=""></p>
<p>点开后有如下界面</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0002_chrono%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8/chrono%E7%95%8C%E9%9D%A2.png?raw=true" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>十分好用的下载器插件 强烈建议使用</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>

<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>美股熔断</title>
    <url>/2020/05/02/%E7%BE%8E%E8%82%A1%E7%86%94%E6%96%AD/</url>
    <content><![CDATA[<h1 id="美股熔断"><a href="#美股熔断" class="headerlink" title="美股熔断"></a>美股熔断</h1><h2 id="记录历史-发生在2020-03-09-黑色星期一"><a href="#记录历史-发生在2020-03-09-黑色星期一" class="headerlink" title="记录历史 发生在2020-03-09 黑色星期一"></a>记录历史 发生在2020-03-09 黑色星期一</h2><p>昨晚在youtube社区看到一个youtuber发的一个社区动态，当时并没有在意，直到今天下午看了几个youtuber的视频才了解到这件事的重大意义</p>
<a id="more"></a>

<p>以下是截图</p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0001/youtube%E7%A4%BE%E5%8C%BA%E6%88%AA%E5%9B%BE.png" alt=""></p>
<p><img src="https://github.com/tothepythonmoon/2badaoblog/blob/master/blog/No_0001/%E7%BE%8E%E8%82%A1%E6%88%AA%E5%9B%BE.jpg" alt=""></p>
<h2 id="造成美股熔断的原因"><a href="#造成美股熔断的原因" class="headerlink" title="造成美股熔断的原因"></a>造成美股熔断的原因</h2><p>1、新冠肺炎疫情影响</p>
<p>2、全球油价大跌 30美金一桶油 甚至没有农夫山泉贵 一桶油不及一个油桶贵</p>
<h2 id="美股熔断表现"><a href="#美股熔断表现" class="headerlink" title="美股熔断表现"></a>美股熔断表现</h2><p>跌得太狠触发第一层熔断机制 停止交易15分钟 </p>
<h2 id="油价大跌原因"><a href="#油价大跌原因" class="headerlink" title="油价大跌原因"></a>油价大跌原因</h2><p>1、疫情导致停工停产 原油作为原材料的购买就少了 大家出门少 需要的汽油少</p>
<p>2、沙特和俄罗斯出售大量低价油 </p>
<h2 id="美股大跌原因"><a href="#美股大跌原因" class="headerlink" title="美股大跌原因"></a>美股大跌原因</h2><p>1、美国页岩气成本高 需要卖50美金一桶才赚钱 </p>
<p>2、美国股市泡沫过大</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>接下来的全球经济 秩序都充满了不确定</p>
]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
